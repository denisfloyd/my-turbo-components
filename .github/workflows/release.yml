name: Release

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout Repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # 👈 Required to retrieve git history

      - name: 🧳 Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: 🛠 Setup Node.js 18.x
        uses: actions/setup-node@v2
        with:
          node-version: 18
          cache: 'pnpm'

      - name: 🛠 'Create env file'
        run: |
          echo "${{ secrets.NODE_ENV }}" > .env

      - name: 🧳 Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: ⚡ Turbo cache
        id: turbo-cache
        uses: actions/cache@v3
        with:
          path: .turbo
          key: turbo-${{ runner.os }}-${{ github.ref_name }}-${{ github.sha }}
          restore-keys: |
            turbo-${{ runner.os }}-${{ github.ref_name }}

      - name: 👉 Install dependencies
        run: pnpm install

      - name: 👷 Build
        id: run-build
        run: pnpm run build:ci

      - name: 🛫 Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          version: pnpm run version-packages
          # This expects you to have a script called release which does a build for your packages and calls changeset publish
          publish: pnpm release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: 📚 Publish Storybook to Chromatic
        if: steps.changesets.outputs.published == 'true'
        uses: chromaui/action@v1
        # Chromatic GitHub Action options
        with:
          # 👇 Chromatic projectToken, refer to the manage page to obtain it.
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          storybookBuildDir: 'storybook-static'
          workingDir: 'apps/docs'
          zip: true
          exitOnceUploaded: true
